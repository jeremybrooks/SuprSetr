/*
 *  SuprSetr is Copyright 2010-2020 by Jeremy Brooks
 *
 *  This file is part of SuprSetr.
 *
 *   SuprSetr is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 3 of the License, or
 *   (at your option) any later version.
 *
 *   SuprSetr is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with SuprSetr.  If not, see <http://www.gnu.org/licenses/>.
 */

package net.jeremybrooks.suprsetr;

import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.border.BevelBorder;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.util.ResourceBundle;


/**
 * This is the List cell used to represent set data to the user.
 *
 * @author Jeremy Brooks
 */
public class SetOrdererCell extends javax.swing.JPanel {


  private ResourceBundle resourceBundle = ResourceBundle.getBundle("net.jeremybrooks.suprsetr.setorderercell");


  /**
   * Creates new form SetCell
   */
  public SetOrdererCell() {
    initComponents();
  }

  /**
   * This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    ResourceBundle bundle = this.resourceBundle;
    lblPic = new JLabel();
    lblTitle = new JLabel();
    lblCount = new JLabel();

    //======== this ========
    setBorder(new BevelBorder(BevelBorder.RAISED));
    setMinimumSize(new Dimension(494, 81));
    setPreferredSize(new Dimension(0, 81));
    setLayout(new GridBagLayout());
    ((GridBagLayout) getLayout()).columnWidths = new int[]{0, 0, 0};
    ((GridBagLayout) getLayout()).rowHeights = new int[]{0, 0, 0};
    ((GridBagLayout) getLayout()).columnWeights = new double[]{0.0, 0.0, 1.0E-4};
    ((GridBagLayout) getLayout()).rowWeights = new double[]{0.0, 0.0, 1.0E-4};

    //---- lblPic ----
    lblPic.setIcon(new ImageIcon(getClass().getResource("/images/empty_set_icon.png")));
    add(lblPic, new GridBagConstraints(0, 0, 1, 2, 0.0, 0.0,
        GridBagConstraints.CENTER, GridBagConstraints.BOTH,
        new Insets(0, 0, 0, 5), 0, 0));

    //---- lblTitle ----
    lblTitle.setFont(new Font("Lucida Grande", Font.BOLD, 13));
    lblTitle.setText(bundle.getString("SetOrdererCell.lblTitle.text"));
    add(lblTitle, new GridBagConstraints(1, 0, 1, 1, 0.0, 0.0,
        GridBagConstraints.CENTER, GridBagConstraints.BOTH,
        new Insets(0, 0, 5, 0), 0, 0));

    //---- lblCount ----
    lblCount.setText(bundle.getString("SetOrdererCell.lblCount.text"));
    add(lblCount, new GridBagConstraints(1, 1, 1, 1, 1.0, 0.0,
        GridBagConstraints.CENTER, GridBagConstraints.HORIZONTAL,
        new Insets(0, 0, 0, 0), 0, 0));
  }// </editor-fold>//GEN-END:initComponents


  /**
   * Set the title for the cell.
   *
   * @param title text to be used for the title.
   */
  public void setTitle(String title) {
    this.lblTitle.setText(title);
  }


  /**
   * Set the image of the cell.
   *
   * @param image the image to display.
   */
  public void setImage(ImageIcon image) {
    this.lblPic.setIcon(image);
  }


  /**
   * Set the description of the cell, as the tooltip.
   *
   * @param description description to be used as the tooltip.
   */
  public void setDescription(String description) {
    this.setToolTipText(description);
  }


  /**
   * Set the background to indicate that this cell is selected.
   *
   * @param isSelected true if the cell is selected.
   */
  public void setSelected(boolean isSelected) {
    if (isSelected) {
      setBackground(java.awt.SystemColor.controlHighlight);
    } else {
      setBackground(null);
    }
  }


  /**
   * Set the photo count label.
   *
   * @param photoCount number of photos in the set.
   * @param videoCount number of videos in the set.
   * @param viewCount  number of views.
   */
  void setCounts(int photoCount, int videoCount, int viewCount) {
    StringBuilder sb = new StringBuilder();
    sb.append(photoCount).append(" ");
    if (photoCount == 1) {
      sb.append(resourceBundle.getString("SetOrdererCell.photo"));
    } else {
      sb.append(resourceBundle.getString("SetOrdererCell.photos"));
    }
    if (videoCount > 0) {
      sb.append(", ").append(videoCount).append(" ");
      if (videoCount == 1) {
        sb.append(resourceBundle.getString("SetOrdererCell.video"));
      } else {
        sb.append(resourceBundle.getString("SetOrdererCell.videos"));
      }
    }
    sb.append(", ").append(viewCount).append(" ");
    if (viewCount == 1) {
      sb.append(resourceBundle.getString("SetOrdererCell.view"));
    } else {
      sb.append(resourceBundle.getString("SetOrdererCell.views"));
    }
    this.lblCount.setText(sb.toString());
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private JLabel lblPic;
  private JLabel lblTitle;
  private JLabel lblCount;
  // End of variables declaration//GEN-END:variables
}
